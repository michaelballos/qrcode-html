openapi: 3.0.3
info:
  title: Dashboard Api
  description: Dashboard Api
  version: 1.0.0
servers:
  - url: 'https://api.qrscribe.com/dashboard/api/v1'
tags:
  - name: users
    description: User management and authentication
  - name: Projects
    description: Project management
paths:
  /register:
    post:
      tags:
        - users
      summary: Register a new user
      description: ""
      operationId: register
      security: [] # No security required
      requestBody:
        $ref: '#/components/requestBodies/User'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "405":
          description: Invalid input
        "409":
          description: User already exists
        "500":
          description: Internal server error
  /login:
    post:
      tags:
        - users
      summary: Login
      description: Login
      operationId: login
      security:
        - basicAuth: []
      requestBody:
        $ref: '#/components/requestBodies/Login'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      token:
                        type: string
                  - $ref: '#/components/responses/User'
        "401":
          description: Invalid credentials
        "405":
          description: Invalid input
  /logout:
    post:
      tags:
        - users
      summary: Logout
      description: Logout
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: "Logout successful!"
components:
  # Reusable schemas (data models)
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          description: Error message
    Node:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserAttributes:
      allOf:
        - $ref: '#/components/schemas/Node'
        - type: object
          properties:
            name:
              type: string
              description: Full name of the user
              example: "John Doe"
            email:
              type: string
              description: Email address
              example: johndoe@email.com
            company:
              type: string
              description: Company name
            lastLogin:
              type: string
              format: date-time
              example: 2020-01-01T00:00:00.000Z
            lastRequestedApiAt:
              type: string
              format: date-time
              example: 2020-01-01T00:00:00.000Z
            lastUsedDashboardAt:
              type: string
              format: date-time
              example: 2020-01-01T00:00:00.000Z
            profilePicture:
              type: string
              description: URL to a statically served profile picture of the user
            timeZone:
              type: string
              description: Local time zone for the user
              example: America/New_York
            locale:
              type: string
              description: Locale for the user
              example: en-US
    ProjectAttributes:
      type: object
      properties:
        name:
          type: string
          description: Name of the project
          example: "My Project"
        description:
          type: string
          description: Description of the project
          example: "This is my project"




  # Reusable path, query, header and cookie parameters
  parameters:
  # Security scheme definitions (see Authentication)
  securitySchemes:
    basicAuth:
      type: http
      in: header
      name: Authorization
      scheme: basic
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
  # Reusable request bodies
  requestBodies:
  # Reusable responses, such as 401 Unauthorized or 400 Bad Request
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: Too many requests have been sent in a given amount of time.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidCredentials:
      description: Invalid credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ExceededLimit:
      description: Exceeded limit
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotImplemented:
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  # Reusable response headers
  headers:
  # Reusable examples
  examples:
  # Reusable links
  links:
  # Reusable callbacks
  callbacks:





